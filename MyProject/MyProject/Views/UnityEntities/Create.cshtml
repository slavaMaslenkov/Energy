@model DataAccess.Postgres.Entity.UnityEntity

@{
    ViewData["Title"] = "Создать параметр";
}

<h1>Создание параметра</h1>

<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">
            <input type="hidden" name="equipmentId" value="@ViewBag.DeviceId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>    

            <!-- Поле выбора шаблона -->
            <div class="form-group">
                <label asp-for="SampleID" class="control-label">Шаблон</label>
                @Html.DropDownListFor(model => model.SampleID, (SelectList)ViewBag.SampleList, "Выберите шаблон", new { @class = "form-control" })
                <span asp-validation-for="SampleID" class="text-danger"></span>
            </div>

            <!-- Поле выбора подсистемы -->
            <div class="form-group">
                <label class="control-label">Подсистема</label>
                @Html.DropDownList("SubsystemID", (SelectList)ViewBag.SubsystemList, "Выберите подсистему", new { @class = "form-control" })
                <span asp-validation-for="SampleID" class="text-danger"></span>
            </div>

            <!-- Поле выбора параметра -->
            <div class="form-group">
                <label asp-for="ConnectionID" class="control-label">Параметр</label>
                <select id="ParameterId" name="parameterId" class="form-control">
                    <option value="">Выберите параметр</option>
                </select>
                <span asp-validation-for="ConnectionID" class="text-danger"></span>
            </div>

            <!-- Поле значения -->
            <div class="form-group">
                <label asp-for="Value" class="control-label"></label>
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Range" class="control-label"></label>
                <input asp-for="Range" class="form-control" />
                <span asp-validation-for="Range" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Доступ</label>
                @Html.DropDownList("RoleID", (SelectList)ViewBag.RoleList, "Выберите роль", new { @class = "form-control" })
                <span asp-validation-for="Right" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <input type="submit" value="Создать" class="btn btn-secondary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
                        document.addEventListener('DOMContentLoaded', function () {
            const subsystemDropdown = document.getElementById('SubsystemID');
            const parameterDropdown = document.getElementById('ParameterId');

            subsystemDropdown.addEventListener('change', async function () {
                const subsystemId = subsystemDropdown.value;

                if (subsystemId) {
                    try {
                        const response = await fetch(`/UnityEntities/GetParametersBySubsystem?subsystemId=${subsystemId}`);
                        if (!response.ok) {
                            throw new Error('Ошибка при загрузке данных');
                        }

                        const data = await response.json();

                        // Очистка и заполнение списка параметров
                        parameterDropdown.innerHTML = '<option value="">Выберите параметр</option>';
                        data.forEach(param => {
                            const option = document.createElement('option');
                            option.value = param.id;  // Используйте ID параметра
                            option.textContent = param.name;
                            parameterDropdown.appendChild(option);
                        });
                    } catch (error) {
                        console.error('Ошибка загрузки параметров:', error);
                        parameterDropdown.innerHTML = '<option value="">Ошибка загрузки</option>';
                    }
                } else {
                    parameterDropdown.innerHTML = '<option value="">Выберите параметр</option>';
                }
            });
        });
    </script>
    </script>
}
