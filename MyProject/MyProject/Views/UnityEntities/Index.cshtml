@using System.Security.Claims
@model IEnumerable<DataAccess.Postgres.Entity.UnityEntity>

@{
    ViewData["Title"] = "Параметры устройства";
}

<div class="header-container">
    <h1>
        Параметры устройства @ViewBag.nameDevice
    </h1>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex align-items-center">
            <label for="sampleFilter" class="me-2 mb-0" style="font-size: 1rem; font-weight: bold;">Шаблон:</label>
            @Html.DropDownList(
                     "sampleFilter",
                     new SelectList(ViewBag.Samples, "Value", "Text", ViewBag.SelectedSampleId),
                     new
                     {
                         @class = "form-select me-3 table-header",
                         style = "width: 250px;",
                         id = "sampleFilter",
                         data_equipmentId = ViewBag.DeviceId
                     })
            <a class="btn btn-secondary d-inline-flex align-items-center text-dark me-2"
               asp-action="ExportToExcel" asp-route-equipmentId="@ViewBag.DeviceId" asp-route-sampleId="@ViewBag.SampleId">
                <i class="bi bi-download me-2"></i> Экспорт
            </a>
        </div>
        <div>
            @if (!ViewBag.sampleStatus && ViewBag.SampleId != null)
            {
                <input type="hidden" name="DeviceId" value="@ViewBag.DeviceId" />
                <input type="hidden" name="SampleId" value="@ViewBag.SampleId" />
                <a class="btn btn-secondary d-inline-flex align-items-center text-dark me-2"
                   asp-action="Create"  asp-route-sampleId=@ViewBag.SampleId asp-route-equipmentId=@ViewBag.DeviceId style="text-decoration: none;">
                    <i class="bi bi-plus-square me-2"></i> Добавить
                </a>
            }
            <a id="delete-selected"
               class="btn btn-info d-inline-flex align-items-center text-dark"
               style="text-decoration: none;"
               data-equipmentId="@ViewBag.DeviceId"
               data-delete-action="@Url.Action("DeleteSelected", "UnityEntities")">
                <i class="bi bi-trash me-2"></i> Удалить
            </a>
        </div>
    </div>
</div>

<form asp-action="UpdateValues" asp-route-id=@ViewBag.DeviceId method="post">
    <input type="hidden" name="DeviceId" value="@ViewBag.DeviceId" />
    <div class="table-container">
        <table class="table text-center" style="width: 100%; table-layout: fixed;">
            <thead class="sticky-header">
                <tr>
                    <th style="width: 5%;"><input type="checkbox" id="select-all" /></th>
                    <th style="width: 15%;">Подсистема</th>
                    <th style="width: 20%;">Параметр</th>
                    <th style="width: 15%;">@Html.DisplayNameFor(model => model.Value)</th>
                    <th style="width: 10%;">@Html.DisplayNameFor(model => model.Connection.Parameters.Measure)</th>
                    <th style="width: 10%;">@Html.DisplayNameFor(model => model.Range)</th>
                    <th style="width: 15%;">Доступ</th>
                    <th style="width: 10%;"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td><input type="checkbox" class="select-item" value="@item.Id" /></td>
                        <td>@Html.DisplayFor(modelItem => item.Connection.Subsystem.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Connection.Parameters.Name)</td>
                        <td>
                            @{
                                // Проверяем, является ли текущий пользователь администратором
                                var isAdmin = User.Claims.Any(c => c.Type == ClaimTypes.Role && c.Value == "Admin");

                                // Проверяем, может ли текущий пользователь (не администратор) изменять значение
                                var userRoles = User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value);
                                var allowedRoles = item.Right?.Where(r => r.Role.Name != "Admin").Select(r => r.Role.Name) ?? Enumerable.Empty<string>();
                                bool canEdit = (isAdmin && !item.Sample.Status) || (!item.Sample.Status && userRoles.Any(role => allowedRoles.Contains(role)));
                            }
                            @if (canEdit)
                            {
                                <input type="text"
                                       name="Values[@item.Id]"
                                       value="@item.Value"
                                       class="form-control text-center mx-auto"
                                       style="width: 200px;" />
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.Value)
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Connection.Parameters.Measure)</td>
                        <td>@Html.DisplayFor(modelItem => item.Range)</td>
                        <td>
                            @if (item.Right != null && item.Right.Any())
                            {
                                @foreach (var right in item.Right.Where(r => r.Role.Name != "Admin"))
                                {
                                    @right.Role.Name
                                }
                            }
                        </td>
                        <td>
                            <i class="bi bi-trash me-2 text-dark"
                               style="cursor: pointer;"
                               data-bs-toggle="modal"
                               data-bs-target="#deleteModal"
                               data-device-name="@item.Connection.Parameters.Name"
                               data-delete-url="@Url.Action("Delete", "UnityEntities", new { id = item.Id, equipmentId = ViewBag.DeviceId })">
                            </i>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <button type="submit" class="btn btn-secondary d-inline-flex align-items-center text-dark me-2">
        <i class="bi bi-save me-2"></i>Сохранить
    </button>
</form>

@Html.Partial("ModalDelete")

<script src="~/js/ModalDelete.js?v=@DateTime.Now.Ticks"></script>
<script src="~/js/UpdateSample.js?v=@DateTime.Now.Ticks"></script>